// -*- ASCII:EDT -*-          //
// bibMacros.cfg              //
// configuration file         //
// for the bibMacros package  //
// -------------------------- //

Requires(20120317); // WinEdt 7

// ------------------------------------------- //
//    For documentation see bibMacros.pdf      //
// ------------------------------------------- //

// 1. Recognizing entries:
Assign("bib_beginLine",          "<");           // Bibliography entries have to start at the beginning of the line
                                                 //                               (options: "<", "")
Assign("bib_keyCS",              "0");           // The key is treated case-insensitively  (options: "1", "0")
                                                 //   (can be slower, but doesn't miss any entries)
// 2. Formatting the entries:
Assign("bib_typeCase",           "U");           // case of the entry type         (options: "U", "L", "I", "")
Assign("bib_fieldCase",          "L");           // case of the field name         (options: "U", "L", "I", "")
Assign("bib_alignName",          "2");           // spaces before the field name   (options: positive number (including 0) )
Assign("bib_alignValue",         "17");          // alignment of the field value   (options: positive number)
Assign("bib_alignContValue",     "1");           // alignment of continued field value, relative to the column no. of bib_alignValue
                                                 //                                (options: positive or negative number)
Assign("bib_alignEqual",         "value");       // alignment of the "="           (options: "value", "name")
Assign("bib_alignKey",           "no");          // alignment of the key           (options: "no", or positive or negative number)
Assign("bib_fieldDelim",         "braces");      // delimiters of the field values (options: "braces", "quotes", "leave")
Assign("bib_numericFieldDelim",  "add");         // delimiters around numerical field values?   (options: "remove", "leave", "add")
Assign("bib_emptyLines",         "remove");      // remove empty lines             (options: "remove", "leave")
Assign("bib_emptyFields",        "remove");      // remove empty fields            (options: "remove", "leave")
Assign("bib_lastComma",          "yes");         // comma after the last entry?    (options: "yes", "no")
Assign("bib_wrap",               "no");          // wrap lines?                    (options: "no" or positive number)

// 3. Generating a Key:
Assign("bib_keyAlways",    "no");                       // only insert a key if it doesn't already exist (options: "yes", "no", "never")
Assign("bib_keyPrompt",    "yes");                      // present the key before inserting it  (options: "yes", "no")
Assign("bib_extraLabel",   "{a}");                      // automatically append a label to a key, if it already exists
                                                        // (options: "no", "{a}", "{1}", "{+a}", "{+1}", "({a})", "-{+1}" etc.)
Assign("bib_key","{author|editor}-{title}:{year}");     // use author or editor, followed by a hyphen, then parts of the title,
                                                        // followed by a colon, and finally the year, to generate the key.

// With conditional rules, you can make up much more sophisticated rules.
// E.g.: (the ">" at the end of the lines serve to concatenate the string)
//Assign("bib_key","[key={key}:{year}]>
//                  [ARTICLE={journal}-{number}:{year}]>
//                  [{author|editor}-{title}:{year}]");

// fine-tuning for key generation:
Assign("bib_{author|editor}_nrwords",       "2");             // Maximum number of authors or editors in the key
Assign("bib_{author|editor}_case",          "");              // Don't change case of authors' names
Assign("bib_{author|editor}_etc",           "ETAL");          // Append "ETAL", if there are actually more authors
Assign("bib_{author|editor}_firstletter",   "$Upper$");       // Names have to start with a capital letter
Assign("bib_{author|editor}_letters",       "@{$Alpha$|-}");  // and consist of letters or hyphens
Assign("bib_{author|editor}_minletters",    "2");             // A surname will be at least 2 characters long
Assign("bib_{author|editor}_extractletters","15");            // Extract 10 letters from the name (maximum)
Assign("bib_{author|editor}_delim",         "+");             // Put a "+" between multiple authors

Assign("bib_{title}_nrwords",               "4");             // Maximum of 4 words from the title
Assign("bib_{title}_case",                  "");              // Don't change case of title
Assign("bib_{title}_etc",                   "");              // Don't append anything
Assign("bib_{title}_firstletter",           "$Alpha$");       // Only take words which start with a normal letter (or "$Upper$" ?)
Assign("bib_{title}_letters",               "@{$Alpha$|-}");  // and which consist of letters or a hyphen
Assign("bib_{title}_minletters",            "4");             // Words have to have at least four letters
Assign("bib_{title}_extractletters",        "4");             // Extract the first four letters
Assign("bib_{title}_delim",                 "");              // Don't put anything between the words
Assign("bib_{title}_skip",                  "[.:(]");         // Skip the part after ".", ":" or "(" (i.e. the subtitle)

Assign("bib_{year}_nrwords",                "1");             // one year only
Assign("bib_{year}_firstletter",            "$Numeric$");     // year consists of digits
Assign("bib_{year}_letters",                "@{$Numeric$}");  // and digits
Assign("bib_{year}_extractletters",         "-2");            // extract the last two digits

// 5. Additional paths and configuration files:
Assign("bib_annotePath", "");         // path for annotation files, relative to %p
Assign("bib_bibStyle",   "");         // bibliography style file (= Fields_<bib_bibStyle>.cfg)
Assign("bib_confFile",   "");         // alternative configuration file which will be read after bibMacros.cfg
                                      //    (this should be defined locally in the bibliography file)
Assign("bib_stringFile", "");         // file(s) which contain(s) additional @STRING definitions (enclosed in {braces} )

// END OF OPTIONS

// ----------------------------------------------- //
// To customize the appearance of the templates    //
// and which fields shall be proposed              //
// when you insert a new field, edit the file      //
//    %b\Macros\LaTeX\bibMacros\Fields.cfg.        //
// ----------------------------------------------- //



// DON'T CHANGE ANYTHING AFTER THIS POINT!!!
// ---------------------------------------------------------------------------------------------
Assign("BM_conf","OK");
Assign("BM_rev","2.0");
// Nice trick to find a file in either of WinEdt's directories %b or %B:
Assign("Borb",>
  !`IfFileExists("%b\%$(|BorbFile|);",>
     !"Assign('%$(|BorbName|);','%b\%$(|BorbFile|);');",>
     !"IfFileExists('%B\%$(|BorbFile|);',>
         !'Assign(''%$(|BorbName|);'',''%B\%$(|BorbFile|);'');',>
         !'Assign(''%$(|BorbName|)'',''???'');');");>
`);
// This will read settings which you may have defined
// in your main tex file.
IfisMode("TeX","%!M",!`>
   GetPreamble("\begin{document}",0);>
   FindInString("%!0","<+{%%}@{ }bibMacros:@{ }>\(<**>\)<+{%%}@{ }bibMacros-end",1,2,1);>
   IfOK(!">
      GetTag(0,0);>
      LetRegNum(2,-1);>
      Loop(!'SetOK(1);>
         FindInString(""%!0"",""<+{%%}@{ }\(1+^{=| }\)@{ }=@{ }\(2*\)>"",1,2,1001,%!2);>
         IfOK(!"">
            GetTag(1,8);>
            GetTag(2,9);>
            Assign(|bib_%!8|,|%!9|);"",""Stop;"");>
      ');>
   ");>
`);
// This will read settings which you may have defined
// locally in your bibliography file.
GetDocAsString(0);
GetLength(3,"%!0");
// Searching the whole file could take too long, so we just extract the end:
ExtractByIndex(0,"%!0",%!3-3000,%!3);
FindInString("%!0","</%_/ bibMacros:\(0@{:}\)@{ }>",1,2,111,0);
IfOK(!">
   ExtractByIndex(1,'%!0',%!2+1,%!3);>
   FindInString('%!1','</%_/ bibMacros-end',2,3,1);>
   IfOK(!'ExtractByIndex(1,''%!1'',0,%!2-1);');>
   GetTag(0,2);>
   IfStr('%!2',':','=',>
      !'LetRegNum(3,0);>
        Loop(!''SetOK(1);>
           FindInString(""%!1"",""<~{/%_/}\(1+^{=| }\)@{ }=@{ }\(2*\)>"",2,3,1001,%!3);>
           IfOK(!"">
               GetTag(1,8);>
               GetTag(2,9);>
               Assign(|bib_%!8|,|%!9|);"",""Stop;"");>
        '');',>
      !'Do(''%!1'');'>
   );">
);

// Read a different configuration file?
IfStr("%$('bib_confFile');","","=","",>
  "Exe('%$(|bib_confFile|);');>
   Release('bib_confFile');");

End;
